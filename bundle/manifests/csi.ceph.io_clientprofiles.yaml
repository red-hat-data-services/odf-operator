apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: clientprofiles.csi.ceph.io
spec:
  group: csi.ceph.io
  names:
    kind: ClientProfile
    listKind: ClientProfileList
    plural: clientprofiles
    singular: clientprofile
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClientProfile is the Schema for the clientprofiles API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ClientProfileSpec defines the desired state of Ceph CSI
              configuration for volumes and snapshots configured to use
              this profile
            properties:
              cephConnectionRef:
                description: |-
                  LocalObjectReference contains enough information to let you locate the
                  referenced object inside the same namespace.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      TODO: Add other useful fields. apiVersion, kind, uid?
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: '''.name'' cannot be empty'
                  rule: self.name != ""
              cephFs:
                description: CephFsConfigSpec defines the desired CephFs configuration
                properties:
                  fuseMountOptions:
                    additionalProperties:
                      type: string
                    type: object
                  kernelMountOptions:
                    additionalProperties:
                      type: string
                    type: object
                  subVolumeGroup:
                    type: string
                type: object
              nfs:
                description: NfsConfigSpec cdefines the desired NFS configuration
                type: object
              rbd:
                description: RbdConfigSpec defines the desired RBD configuration
                properties:
                  radosNamespace:
                    type: string
                type: object
            required:
            - cephConnectionRef
            type: object
          status:
            description: |-
              ClientProfileStatus defines the observed state of Ceph CSI
              configuration for volumes and snapshots configured to use
              this profile
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
